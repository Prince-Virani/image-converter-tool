"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/image-converter.ts":
/*!************************************!*\
  !*** ./src/lib/image-converter.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertImage: () => (/* binding */ convertImage)\n/* harmony export */ });\nasync function convertImage(file, targetFormat) {\n    return new Promise((resolve, reject)=>{\n        try {\n            // Create a FileReader to read the file\n            const reader = new FileReader();\n            reader.onload = (event)=>{\n                var _event_target;\n                const img = new Image();\n                img.onload = ()=>{\n                    // Create a canvas element\n                    const canvas = document.createElement(\"canvas\");\n                    canvas.width = img.width;\n                    canvas.height = img.height;\n                    // Draw the image on the canvas\n                    const ctx = canvas.getContext(\"2d\");\n                    if (!ctx) {\n                        reject(new Error(\"Could not get canvas context\"));\n                        return;\n                    }\n                    // Fill with white background for formats that don't support transparency\n                    if (targetFormat === \"jpg\" || targetFormat === \"jpeg\") {\n                        ctx.fillStyle = \"white\";\n                        ctx.fillRect(0, 0, canvas.width, canvas.height);\n                    }\n                    ctx.drawImage(img, 0, 0);\n                    // Convert the canvas to the target format\n                    let mimeType;\n                    switch(targetFormat){\n                        case \"png\":\n                            mimeType = \"image/png\";\n                            break;\n                        case \"jpg\":\n                        case \"jpeg\":\n                            mimeType = \"image/jpeg\";\n                            break;\n                        case \"webp\":\n                            mimeType = \"image/webp\";\n                            break;\n                        default:\n                            mimeType = \"image/png\";\n                    }\n                    // Get the data URL from the canvas\n                    const dataUrl = canvas.toDataURL(mimeType, 0.9);\n                    resolve(dataUrl);\n                };\n                img.onerror = ()=>{\n                    reject(new Error(\"Failed to load image\"));\n                };\n                // Set the source of the image to the FileReader result\n                img.src = (_event_target = event.target) === null || _event_target === void 0 ? void 0 : _event_target.result;\n            };\n            reader.onerror = ()=>{\n                reject(new Error(\"Failed to read file\"));\n            };\n            // Read the file as a data URL\n            reader.readAsDataURL(file);\n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvaW1hZ2UtY29udmVydGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxlQUFlQSxhQUNyQkMsSUFBVSxFQUNWQyxZQUFvQjtJQUVwQixPQUFPLElBQUlDLFFBQVEsQ0FBQ0MsU0FBU0M7UUFDNUIsSUFBSTtZQUNILHVDQUF1QztZQUN2QyxNQUFNQyxTQUFTLElBQUlDO1lBRW5CRCxPQUFPRSxNQUFNLEdBQUcsQ0FBQ0M7b0JBa0ROQTtnQkFqRFYsTUFBTUMsTUFBTSxJQUFJQztnQkFDaEJELElBQUlGLE1BQU0sR0FBRztvQkFDWiwwQkFBMEI7b0JBQzFCLE1BQU1JLFNBQVNDLFNBQVNDLGFBQWEsQ0FBQztvQkFDdENGLE9BQU9HLEtBQUssR0FBR0wsSUFBSUssS0FBSztvQkFDeEJILE9BQU9JLE1BQU0sR0FBR04sSUFBSU0sTUFBTTtvQkFFMUIsK0JBQStCO29CQUMvQixNQUFNQyxNQUFNTCxPQUFPTSxVQUFVLENBQUM7b0JBQzlCLElBQUksQ0FBQ0QsS0FBSzt3QkFDVFosT0FBTyxJQUFJYyxNQUFNO3dCQUNqQjtvQkFDRDtvQkFFQSx5RUFBeUU7b0JBQ3pFLElBQUlqQixpQkFBaUIsU0FBU0EsaUJBQWlCLFFBQVE7d0JBQ3REZSxJQUFJRyxTQUFTLEdBQUc7d0JBQ2hCSCxJQUFJSSxRQUFRLENBQUMsR0FBRyxHQUFHVCxPQUFPRyxLQUFLLEVBQUVILE9BQU9JLE1BQU07b0JBQy9DO29CQUVBQyxJQUFJSyxTQUFTLENBQUNaLEtBQUssR0FBRztvQkFFdEIsMENBQTBDO29CQUMxQyxJQUFJYTtvQkFDSixPQUFRckI7d0JBQ1AsS0FBSzs0QkFDSnFCLFdBQVc7NEJBQ1g7d0JBQ0QsS0FBSzt3QkFDTCxLQUFLOzRCQUNKQSxXQUFXOzRCQUNYO3dCQUNELEtBQUs7NEJBQ0pBLFdBQVc7NEJBQ1g7d0JBQ0Q7NEJBQ0NBLFdBQVc7b0JBQ2I7b0JBRUEsbUNBQW1DO29CQUNuQyxNQUFNQyxVQUFVWixPQUFPYSxTQUFTLENBQUNGLFVBQVU7b0JBQzNDbkIsUUFBUW9CO2dCQUNUO2dCQUVBZCxJQUFJZ0IsT0FBTyxHQUFHO29CQUNickIsT0FBTyxJQUFJYyxNQUFNO2dCQUNsQjtnQkFFQSx1REFBdUQ7Z0JBQ3ZEVCxJQUFJaUIsR0FBRyxJQUFHbEIsZ0JBQUFBLE1BQU1tQixNQUFNLGNBQVpuQixvQ0FBQUEsY0FBY29CLE1BQU07WUFDL0I7WUFFQXZCLE9BQU9vQixPQUFPLEdBQUc7Z0JBQ2hCckIsT0FBTyxJQUFJYyxNQUFNO1lBQ2xCO1lBRUEsOEJBQThCO1lBQzlCYixPQUFPd0IsYUFBYSxDQUFDN0I7UUFDdEIsRUFBRSxPQUFPOEIsT0FBTztZQUNmMUIsT0FBTzBCO1FBQ1I7SUFDRDtBQUNEIiwic291cmNlcyI6WyIvVXNlcnMvZGhlZXJ1cmFqcG9vdC9EZXNrdG9wL2ltYWdlLWNvbnZlcnRlci9zcmMvbGliL2ltYWdlLWNvbnZlcnRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgYXN5bmMgZnVuY3Rpb24gY29udmVydEltYWdlKFxuXHRmaWxlOiBGaWxlLFxuXHR0YXJnZXRGb3JtYXQ6IHN0cmluZ1xuKTogUHJvbWlzZTxzdHJpbmc+IHtcblx0cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcblx0XHR0cnkge1xuXHRcdFx0Ly8gQ3JlYXRlIGEgRmlsZVJlYWRlciB0byByZWFkIHRoZSBmaWxlXG5cdFx0XHRjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuXG5cdFx0XHRyZWFkZXIub25sb2FkID0gKGV2ZW50KSA9PiB7XG5cdFx0XHRcdGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpO1xuXHRcdFx0XHRpbWcub25sb2FkID0gKCkgPT4ge1xuXHRcdFx0XHRcdC8vIENyZWF0ZSBhIGNhbnZhcyBlbGVtZW50XG5cdFx0XHRcdFx0Y29uc3QgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtcblx0XHRcdFx0XHRjYW52YXMud2lkdGggPSBpbWcud2lkdGg7XG5cdFx0XHRcdFx0Y2FudmFzLmhlaWdodCA9IGltZy5oZWlnaHQ7XG5cblx0XHRcdFx0XHQvLyBEcmF3IHRoZSBpbWFnZSBvbiB0aGUgY2FudmFzXG5cdFx0XHRcdFx0Y29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcblx0XHRcdFx0XHRpZiAoIWN0eCkge1xuXHRcdFx0XHRcdFx0cmVqZWN0KG5ldyBFcnJvcihcIkNvdWxkIG5vdCBnZXQgY2FudmFzIGNvbnRleHRcIikpO1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIEZpbGwgd2l0aCB3aGl0ZSBiYWNrZ3JvdW5kIGZvciBmb3JtYXRzIHRoYXQgZG9uJ3Qgc3VwcG9ydCB0cmFuc3BhcmVuY3lcblx0XHRcdFx0XHRpZiAodGFyZ2V0Rm9ybWF0ID09PSBcImpwZ1wiIHx8IHRhcmdldEZvcm1hdCA9PT0gXCJqcGVnXCIpIHtcblx0XHRcdFx0XHRcdGN0eC5maWxsU3R5bGUgPSBcIndoaXRlXCI7XG5cdFx0XHRcdFx0XHRjdHguZmlsbFJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRjdHguZHJhd0ltYWdlKGltZywgMCwgMCk7XG5cblx0XHRcdFx0XHQvLyBDb252ZXJ0IHRoZSBjYW52YXMgdG8gdGhlIHRhcmdldCBmb3JtYXRcblx0XHRcdFx0XHRsZXQgbWltZVR5cGU6IHN0cmluZztcblx0XHRcdFx0XHRzd2l0Y2ggKHRhcmdldEZvcm1hdCkge1xuXHRcdFx0XHRcdFx0Y2FzZSBcInBuZ1wiOlxuXHRcdFx0XHRcdFx0XHRtaW1lVHlwZSA9IFwiaW1hZ2UvcG5nXCI7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSBcImpwZ1wiOlxuXHRcdFx0XHRcdFx0Y2FzZSBcImpwZWdcIjpcblx0XHRcdFx0XHRcdFx0bWltZVR5cGUgPSBcImltYWdlL2pwZWdcIjtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRjYXNlIFwid2VicFwiOlxuXHRcdFx0XHRcdFx0XHRtaW1lVHlwZSA9IFwiaW1hZ2Uvd2VicFwiO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdG1pbWVUeXBlID0gXCJpbWFnZS9wbmdcIjtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBHZXQgdGhlIGRhdGEgVVJMIGZyb20gdGhlIGNhbnZhc1xuXHRcdFx0XHRcdGNvbnN0IGRhdGFVcmwgPSBjYW52YXMudG9EYXRhVVJMKG1pbWVUeXBlLCAwLjkpO1xuXHRcdFx0XHRcdHJlc29sdmUoZGF0YVVybCk7XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0aW1nLm9uZXJyb3IgPSAoKSA9PiB7XG5cdFx0XHRcdFx0cmVqZWN0KG5ldyBFcnJvcihcIkZhaWxlZCB0byBsb2FkIGltYWdlXCIpKTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHQvLyBTZXQgdGhlIHNvdXJjZSBvZiB0aGUgaW1hZ2UgdG8gdGhlIEZpbGVSZWFkZXIgcmVzdWx0XG5cdFx0XHRcdGltZy5zcmMgPSBldmVudC50YXJnZXQ/LnJlc3VsdCBhcyBzdHJpbmc7XG5cdFx0XHR9O1xuXG5cdFx0XHRyZWFkZXIub25lcnJvciA9ICgpID0+IHtcblx0XHRcdFx0cmVqZWN0KG5ldyBFcnJvcihcIkZhaWxlZCB0byByZWFkIGZpbGVcIikpO1xuXHRcdFx0fTtcblxuXHRcdFx0Ly8gUmVhZCB0aGUgZmlsZSBhcyBhIGRhdGEgVVJMXG5cdFx0XHRyZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcblx0XHR9IGNhdGNoIChlcnJvcikge1xuXHRcdFx0cmVqZWN0KGVycm9yKTtcblx0XHR9XG5cdH0pO1xufVxuIl0sIm5hbWVzIjpbImNvbnZlcnRJbWFnZSIsImZpbGUiLCJ0YXJnZXRGb3JtYXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJvbmxvYWQiLCJldmVudCIsImltZyIsIkltYWdlIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwid2lkdGgiLCJoZWlnaHQiLCJjdHgiLCJnZXRDb250ZXh0IiwiRXJyb3IiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsImRyYXdJbWFnZSIsIm1pbWVUeXBlIiwiZGF0YVVybCIsInRvRGF0YVVSTCIsIm9uZXJyb3IiLCJzcmMiLCJ0YXJnZXQiLCJyZXN1bHQiLCJyZWFkQXNEYXRhVVJMIiwiZXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/image-converter.ts\n"));

/***/ })

});